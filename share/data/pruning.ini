; $Id$
; $Author$



; the simulation stops when (1) max_day is reached (given that 
; time_step is in days) or (2) max_elements is reached. 
; TYPES: max_days, max_elements, time_step must be integer
; * starting_year   : does not influence the simulation.
; * saveimage       : store an image for each time step
; * movie           : works under linux only.
; * colorcode       : one of [normal, order, length, allocated]
; * fast option     : skips some branch and growth unit update (done at the end only) (15% faster)
[general]
verbose                 = True
max_days                = 210
max_elements            = 5000
time_step               = 1
saveimage               = False
movie                   = False
tag                     = test
starting_year           = 2000.25
colorcode               = normal
fast                    = False


; background    : set bg color of the viewer
; xygrid        : add a grid on plane xy
[viewer]
background              = 255,255,255
xygrid                  = True
xzgrid                  = False
yzgrid                  = False



; geometry section should only affects the visual aspect, not the results !!
; texture   : add texture. Slow done the simulation
; nbaxes    : number of branches and leaves per node
; leaf_view : set it to False to speed up simulation
; branch_view, growth_unit_view: show the branches or growth units is True
; leaf_petiole length and radius are im meters
; leaf_stride_number    :discretization of the leaves (smust be > 3) set to small values to speed up simulation
[geometry]
texture                 = False
phyllotactic_angle      = 137.5
;phyllotactic_angle      = 180.
nbaxes =                1
branching_angle         = 40
leaf_view               = False
growth_unit_view        = False
branch_view             = False
radius_scale            = 200
leaf_petiole_length     = 0.015
leaf_petiole_radius     = 0.0005
leaf_surface_ratio      = 30
leaf_stride_number      = 6
internode_length_scale  = 100

[tropism]
tropism = True
; tropism on z axis used by @Tp
x = 0
y = 0
z = 1
; elasticity for tropism used by @Ts
elasticity = 0.05


; The simulation requires some initial resource. 
; initial_resource must be >growth_threshold/plastochron.
[root]
initial_resource           = 1


; change growth threshold only in principle
; plastochron is 3 days, so demand is 1./3
; grow threshold indicates is used when apex grows the first time.
[apex]
demand                     = 0.3334
plastochron                = 3
store_data                 = True
; must be > min length of internode 
growth_threshold           = 0.5


; change leaf resource only in principle. 
; efficiency method allows to have autotrophic and heterotrophic phases
[leaf]
resource                   = 0.2
maturation                 = 21.
growth_function            = sigmoid
growth_rate                = 1
; unity or sigmoid
efficiency_method           = unity
store_data                  = False
lifetime                    = 210


; fractionial radius of the internode used in the living cost
; cambial fraction is a maintenance cost before any allocation
[internode]
cambial_fraction           = 0.00
store_data                 = True
maturation                 = 10.
length_max                 = 0.03
length_min                 = 0.001
radius_min                 = 0.01

[pipe]
; vinci, none
model                      = vinci
model_coeff                = 2.49
fraction                   = 0.9

[misc]
order_max                       = 5
light_interception              = False
post_analysis                   = False
reset_resource                 = False
; must be less than plastochron *  apex_demand


; allocation model may be proportional, hierarchical and perturbation if provided, 
; shuffle the demands by adding perturbation to the demands where a data becomes
; data+numpy.random.randn(1-e, 1+e, 1) where e is the perturbation.
[allocation]
model = hierarchical
;model = proportional
perturbation = 0.01

[context]
; context can be [additive or multiplicative]
model = additive
; 0_0_-2_1_0_0
; 0.5 0 -2 1 0 0.5
; o=2.5, h=-3, r=-1, a=0.3, v=0, d2a=2
; vigor_coeff neagative favors growing apices
order_coeff             = 1 
height_coeff            = 0
rank_coeff              = 0
age_coeff               = 0
vigor_coeff             = 0.
d2a_coeff               = 0

;3_1_0_1_-1 is interesting for resource =0.15, cambial=0.005 : fourche 
;3_0_0_0_-1 is interesting for resource =0.15, cambial=0.005 : many short

[growth_unit]
; in days
latency = 15

[pruning]
; only box or None are available right now. trunk will cut the trunk at time trunk_time if above trunk_height (number of internode from root) 
method = None
;large values means they have not effect!
max_x   = 1e6
max_y   = 1e6
max_z   = 1e6
min_z   = 0
;if method == box and this is true, then place a box using max_x,max_y, max_z to show where is the cutting
box     = False

trunk_time = 70
trunk_height = 16


[reserve]
; alpha=0 means it is not used. alpha=1 means it is fully used (e.g., at 
; the end of the season all resource is taken to be sent to the reserve
alpha = 0
starting_time = 105
duration = 210
